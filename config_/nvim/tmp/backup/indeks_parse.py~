#!/bin/python

import os, sys, re

# define some colors to prettify output
COLORS = {
        'red' : '\x1b[31m',
        'green' : '\x1b[32m',
        'yellow' : '\x1b[33m',
        'blue' : '\x1b[34m',
        'none' : '\x1b[0m',
}

# check the passed command line arguments
if 2 != len(sys.argv):
    print("%sUsage: [program.py] [path/to/directory]" % (COLORS['red']))
    sys.exit(1)

# check if the passed file is a directory
if not os.path.isdir(sys.argv[1]):
    print("%s%s is not a directory..." % (COLORS['red'], sys.argv[1]))
    sys.exit(1)

# save the directory name
directory = sys.argv[1]

# initiaize the maps
lang_map = {}
stud_map = {}

# regex for counting extensions
lang_pat = re.compile(r"""
    ^(.*?)\.(?P<lang>cpp|java|pas|c)$
""", re.VERBOSE)

# regex for the student indeks file
stud_pat = re.compile(r"""
    (?P<indeks>m[i|r|v|n|m|l][0-9]{5})(?:[^A-Z]*)(?P<ime>[A-Za-z ]+)
""", re.VERBOSE)

# iterate throught the directory
for item in os.listdir(directory):
    path = os.path.join(directory, item)

    # if we stumble upon a directory, count the number of cpp, c, java and pascal files inside
    if os.path.isdir(path):
        lang_map.update({item : {'cpp' : 0, 'c' : 0, 'java' : 0, 'pas' : 0}}) # maybe we should use get in case two directories have the same name
        for entry in os.listdir(path):
            match = lang_pat.search(entry)
            if None != match:
                lang_map[item][match.group('lang')] += 1

    # if the file is not a dir, its the student roster, get the names from it
    else:
        with open(path, 'r') as indeks:
            for match in stud_pat.finditer(indeks.read()):
                stud_map.update({match.group('indeks') : match.group('ime')})

# print the results
print("%s%-15s %s%-5s %-5s %-5s %-5s%s" % (COLORS['blue'], "Student", COLORS['green'], "cpp", "c", "java", "pas", COLORS['none']))

for entry in lang_map.items():
    ime = stud_map[entry[0]]
    lang = entry[1]
    print("%-15s %s%-5d %-5d %-5d %-5d%s" % (ime,
                                             COLORS['yellow'],
                                             lang['cpp'], lang['c'], lang['java'], lang['pas'],
                                             COLORS['none']))
